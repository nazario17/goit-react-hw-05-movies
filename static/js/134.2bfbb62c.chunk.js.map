{"version":3,"file":"static/js/134.2bfbb62c.chunk.js","mappings":"iOAuDA,UAnDA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMXC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBADa,mBAIKC,EAAAA,EAAAA,IAAoBX,GAJzB,OAIXY,EAJW,OAKjBT,EAAiBS,EAAQA,SALR,gDAOfC,QAAQT,MAAM,iCAAd,MACAC,EAAS,EAAD,IARO,yDAAH,sDAYlB,OAAID,GACK,wCAIP,4BACE,oCACA,kBAAMU,SAAUN,EAAhB,WACE,kBACEO,KAAK,OACLC,MAAOhB,EACPiB,SA3BkB,SAAAR,GACxBR,EAASQ,EAAMS,OAAOF,MACvB,EA0BOG,YAAY,2BAEd,mBAAQJ,KAAK,SAAb,wBAEF,wBACGb,EAAckB,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMnB,GAAxC,SACGe,EAAMK,SAFFL,EAAME,GADO,QAU/B,C,+LCnDDI,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,oDACwBC,IAF1C,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,mCACsBL,IAFxC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,2CAC8BL,IAFhD,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCF,GAApC,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,2CAC8BL,IAFhD,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCX,GAAnC,uFACkB2B,EAAAA,EAAAA,IAAA,6BACC3B,EADD,8DAC4D4B,IAF9E,cACCE,EADD,yBAIEA,EAASC,MAJX,kE","sources":["pages/Movies.jsx","services/fetchApi.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchApiMovieSearch } from 'services/fetchApi';\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const results = await fetchApiMovieSearch(query);\n      setSearchResults(results.results);\n    } catch (error) {\n        console.error('Error fetching search results:', error);\n        setError(error)\n    }\n  };\n\n  if (error) {\n    return <div>Not Found</div>;\n  }\n\n  return (\n    <div>\n      <h1>Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          placeholder=\"Search for a movie...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c97607d6a7ff13e25d14023836e4d703';\n\nexport async function fetchApi() {\n  const response = await axios.get(\n    `trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovie(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieActors(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieSearch(query) {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n"],"names":["useState","query","setQuery","searchResults","setSearchResults","error","setError","location","useLocation","handleSubmit","event","preventDefault","fetchApiMovieSearch","results","console","onSubmit","type","value","onChange","target","placeholder","map","movie","to","id","state","from","title","axios","API_KEY","fetchApi","response","data","fetchApiMovie","movieId","fetchApiMovieActors","fetchApiMovieReviews"],"sourceRoot":""}