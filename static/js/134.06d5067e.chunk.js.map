{"version":3,"file":"static/js/134.06d5067e.chunk.js","mappings":"iOAoFA,UA/EA,WACE,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMXC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBADa,mBAIKC,EAAAA,EAAAA,IAAoBX,GAJzB,OAIXY,EAJW,OAKjBT,EAAiBS,EAAQA,SAEzBf,EAAagB,IAAI,QAASb,GAC1BF,EAAgBD,GAEhBiB,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUL,EAAQA,UAC7DE,aAAaC,QAAQ,cAAef,GAXnB,kDAajBkB,QAAQd,MAAM,iCAAd,MACAC,EAAS,EAAD,IAdS,0DAAH,sDAuClB,OArBAc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAqBJ,KAAKK,MAC9BP,aAAaQ,QAAQ,kBAEnBF,GACFjB,EAAiBiB,GAGnB,IAAMG,EAAaT,aAAaQ,QAAQ,eACpCC,GACFtB,EAASsB,EAIZ,GAAE,KAEHJ,EAAAA,EAAAA,YAAU,WACRL,aAAaU,WAAW,iBACxBV,aAAaU,WAAW,cACzB,GAAE,IAECpB,GACK,wCAIP,4BACE,oCACA,kBAAMqB,SAAUjB,EAAhB,WACE,kBACEkB,KAAK,OACLC,MAAO3B,EACP4B,SAtDkB,SAAAnB,GACxBR,EAASQ,EAAMoB,OAAOF,MACvB,EAqDOG,YAAY,2BAEd,mBAAQJ,KAAK,SAAb,wBAEF,wBACGxB,EAAc6B,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM9B,GAAxC,SACG0B,EAAMK,SAFFL,EAAME,GADO,QAU/B,C,+LChFDI,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,oDACwBC,IAF1C,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,mCACsBL,IAFxC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,2CAC8BL,IAFhD,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCF,GAApC,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,2CAC8BL,IAFhD,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAAmCX,GAAnC,uFACkBsC,EAAAA,EAAAA,IAAA,6BACCtC,EADD,8DAC4DuC,IAF9E,cACCE,EADD,yBAIEA,EAASC,MAJX,kE","sources":["pages/Movies.jsx","services/fetchApi.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchApiMovieSearch } from 'services/fetchApi';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const results = await fetchApiMovieSearch(query);\n      setSearchResults(results.results);\n\n      searchParams.set('query', query);\n      setSearchParams(searchParams);\n      \n      localStorage.setItem('searchResults', JSON.stringify(results.results));\n      localStorage.setItem('searchQuery', query);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n      setError(error);\n    }\n  };\n\n  useEffect(() => {\n    const savedSearchResults = JSON.parse(\n      localStorage.getItem('searchResults')\n    );\n    if (savedSearchResults) {\n      setSearchResults(savedSearchResults);\n    }\n\n    const savedQuery = localStorage.getItem('searchQuery');\n    if (savedQuery) {\n      setQuery(savedQuery);\n    }\n\n    \n  }, []);\n\n  useEffect(() => {\n    localStorage.removeItem('searchResults');\n    localStorage.removeItem('searchQuery');\n  }, []);\n\n  if (error) {\n    return <div>Not Found</div>;\n  }\n\n  return (\n    <div>\n      <h1>Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          placeholder=\"Search for a movie...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c97607d6a7ff13e25d14023836e4d703';\n\nexport async function fetchApi() {\n  const response = await axios.get(\n    `trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovie(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieActors(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieSearch(query) {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","query","setQuery","searchResults","setSearchResults","error","setError","location","useLocation","handleSubmit","event","preventDefault","fetchApiMovieSearch","results","set","localStorage","setItem","JSON","stringify","console","useEffect","savedSearchResults","parse","getItem","savedQuery","removeItem","onSubmit","type","value","onChange","target","placeholder","map","movie","to","id","state","from","title","axios","API_KEY","fetchApi","response","data","fetchApiMovie","movieId","fetchApiMovieActors","fetchApiMovieReviews"],"sourceRoot":""}